#!/usr/bin/env bash

set -e

# This script gets packaged with the release and should do the bulk of the setup work. This allows this setup to be tied
# to a specific release of the code, and guarantees it will never run along-side newer or older binaries.

# some distros don't have systemd enabled by default, check this first
if [[ $(ps -p 1 -o comm=) != "systemd" ]]; then
  echo "systemd is required for this installation. Please enable it, then rerun the setup."
  exit 1
fi

if ! find /usr/lib* -name 'libcurl.so*' -print -quit | grep -q .; then
  echo "The libcurl library is not found. It's typically provided by the package libcurl4 (Debian/Ubuntu), libcurl (Fedora), or curl (Arch). \
        Please install it and rerun setup."
  exit 1
fi

# run user_setup as the user
sudo -u $USER ./user_setup

### BEGIN sudo required section
udevadm control --reload-rules
udevadm trigger

systemctl is-active --quiet xr-driver && sudo systemctl stop xr-driver

# remove temporary files that may be left behind, sometimes they cause problems
rm -f /tmp/shader_runtime_*
rm -f /dev/shm/xr_*
rm -f /dev/shm/breezy_desktop_imu


### END sudo required section

systemctl --user daemon-reload
systemctl --user start xr-driver

# check if systemd startup was successful
if ! systemctl --user is-active --quiet xr-driver; then
  echo "systemd startup failed"
  exit 1
fi

# set it to run on startup
systemctl --user enable xr-driver

# Ensure the user service persists after logout
loginctl enable-linger $USER