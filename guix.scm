(define-module (mlaparie packages xrlinuxdriver)
  #:use-module (guix packages)
  #:use-module (guix download)
  #:use-module (guix git)
  #:use-module (guix git-download)
  #:use-module (guix build-system cmake)
  #:use-module (guix utils)
  #:use-module (gnu packages)
  #:use-module (gnu packages cmake)
  #:use-module (gnu packages curl)
  #:use-module (gnu packages freedesktop)
  #:use-module (gnu packages libffi)
  #:use-module (gnu packages libusb)
  #:use-module (gnu packages linux)
  #:use-module (gnu packages pkg-config)
  #:use-module (gnu packages python)
  #:use-module (gnu packages python-xyz)
  #:use-module (gnu packages tls)
  #:use-module (gnu packages version-control)
  #:use-module (gnu packages web)
  #:use-module (gnu packages xorg)
  #:use-module ((guix licenses) #:prefix license:))

(define-public xrlinuxdriver
  (let ((commit "27f102ea97ddc015bf340a5627a7957fc6d39378")
        (revision "1"))
  (package
   (name "xrlinuxdriver")
   (version (git-version "0.12.0.1" revision commit))
   (source (origin
             (method git-fetch)
             (uri (git-reference
                    (url "https://github.com/wheaney/XRLinuxDriver")
                    (recursive? #t)
                    (commit commit)))
             (sha256 (base32 "149dywvmlglq2bp17kflifm4r46d3ghmfaagdlml0pqbg671iiw3"))))
   (build-system cmake-build-system)
   (arguments
    `(#:configure-flags '("-DCMAKE_SKIP_RPATH=ON")
      #:tests? #f))
   (inputs
    `(("curl" ,curl)
      ("hidapi" ,hidapi)
      ("json-c" ,json-c)
      ("libevdev" ,libevdev)
      ("libffi" ,libffi)
      ("libusb" ,libusb)
      ("eudev" ,eudev)
      ("openssl" ,openssl)
      ("wayland" ,wayland)))
   (native-inputs
    `(("cmake" ,cmake)
      ("pkg-config" ,pkg-config)
      ("python" ,python-wrapper)
      ("PyYAML" ,python-pyyaml)))
   (home-page "https://github.com/wheaney/XRLinuxDriver")
   (synopsis "Linux service for interacting with XR devices.")
   (description "This package provides a Linux service for interacting with XR devices.")
   (license license:expat))))
xrlinuxdriver
